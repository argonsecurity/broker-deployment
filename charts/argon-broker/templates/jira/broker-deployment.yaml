{{- if .Values.jira.url }}
{{- $v := .Values.jira.jiraBroker }}
{{- $name := printf "%s-%s" (include "chart.fullname" . ) $v.nameSuffix }}
{{- $jira_secret := printf "%s-%s" (include "chart.fullname" . ) "jira" }}
{{- $ssl := dict "secret" $jira_secret "ssl" .Values.jira.ssl }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/jira/secret.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ include "common.podLabels" . | indent 8 }}
    spec:
      containers:
        - name: {{ $name }}
          image: {{ include "common.image" (dict "image" $v.image "global" .Values.global) }}
          imagePullPolicy: {{ $v.image.pullPolicy | default "Always" }}
          env:
          - name: ARGON_SERVER
            value: {{ .Values.global.argonServer }}
          - name: TOKEN
            value: {{ .Values.global.token }}
          - name: PORT
            value: {{ $v.port | quote }}
          - name: BASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ $jira_secret }}
                key: url
          - name: JIRA_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ $jira_secret }}
                key: token
          {{- include "ssl.envs" $ssl | indent 10 }}
          {{- range $key, $value := $v.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $value := .Values.global.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ $v.port }}
              protocol: TCP
          resources:
{{ toYaml $v.resources | indent 12 }}
          volumeMounts:
          {{- include "ssl.volumeMount" $ssl | indent 10 }}
      volumes:
      {{- include "ssl.volumeSecret" $ssl | indent 6 }}
    {{- with $v.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $v.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $v.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}